<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Around the world in 80 days (80days)</title><link>http://openbermuda.github.io/80days/</link><description></description><atom:link rel="self" href="http://openbermuda.github.io/80days/categories/80days.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 09 Jul 2015 18:47:37 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Are we nearly there yet?</title><link>http://openbermuda.github.io/80days/posts/are-we-nearly-there-yet.html</link><dc:creator>Johnny Gill</dc:creator><description>&lt;div&gt;&lt;p&gt;As of last night I have competition entry all working.&lt;/p&gt;
&lt;p&gt;You can see all the competions being run.  If a competition has not
started yet or is still in progress you can enter.&lt;/p&gt;
&lt;p&gt;To enter, just give the nickname you want to use for the competion.&lt;/p&gt;
&lt;p&gt;Next job is to add code to allow competitors to create and join teams.&lt;/p&gt;
&lt;p&gt;This shouldn't take too long given what I now have.&lt;/p&gt;&lt;/div&gt;</description><category>80days</category><category>angular</category><category>django</category><category>python</category><guid>http://openbermuda.github.io/80days/posts/are-we-nearly-there-yet.html</guid><pubDate>Tue, 10 Feb 2015 15:43:05 GMT</pubDate></item><item><title>Angular velocity</title><link>http://openbermuda.github.io/80days/posts/angular-velocity.html</link><dc:creator>Johnny Gill</dc:creator><description>&lt;div&gt;&lt;p&gt;So it has been a while since I blogged about the 80 day project.&lt;/p&gt;
&lt;p&gt;This is largely due to most of my free time has been spent working on
the code.&lt;/p&gt;
&lt;p&gt;Just to recap, 77 days into the project I still had quite a bit to
do.  Most of the work up to that point had been on getting pieces
together, decide what tools to use, learning those tools.&lt;/p&gt;
&lt;p&gt;The next job was to move the angular code around a bit and try and get
django serving it all.  In particular, I had decided it was probably
worthwhile to have the &lt;a class="reference external" href="https://angularjs.org/"&gt;angular.js&lt;/a&gt; partial html pieces go through
the &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;django&lt;/a&gt; template engine.&lt;/p&gt;
&lt;p&gt;Getting npm up and running, with a recent enough version can be
tricky, but there was an excellent guide on &lt;a class="reference external" href="https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#debian-and-ubuntu-based-linux-distributions"&gt;Installing npm on Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With moving all the files around, &lt;strong&gt;.bowerrc&lt;/strong&gt; needed editing a few
times to point it at where the bower_components were now made to be
installed.&lt;/p&gt;
&lt;p&gt;Ever since the &lt;a class="reference external" href="http://openbermuda.github.io/80days/posts/global-hackathon-team-bermuda.html"&gt;Global Hackathon, Team Bermuda&lt;/a&gt; I have had mild
paranoia that cross-site-request-forgery is going to bite me at some
point.  I am hoping that by serving everything under django I will
avoid that nightmare.  In the meanwhile, I did at this &lt;a class="reference external" href="https://github.com/swfiua/80days/commit/678ae25e432b8633230bf67f8168a8f8188717b1"&gt;csrf fix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A previous post, &lt;a class="reference external" href="http://openbermuda.github.io/80days/posts/nginx-on-kodingcom.html"&gt;Nginx on koding.com&lt;/a&gt; came in useful for setting
up postgres on koding.com as I decided it was more than time to get
this thing running on a cloud based machine.&lt;/p&gt;
&lt;p&gt;I have not found myself using &lt;em&gt;django-angular&lt;/em&gt;, but the &lt;a class="reference external" href="http://django-angular.readthedocs.org/en/latest/integration.html"&gt;django
angular integration&lt;/a&gt; docs have been an enormous help in highlighting
issues in integrating django and angular.&lt;/p&gt;
&lt;p&gt;In amongst all this I decided it was time to add &lt;a class="reference external" href="https://github.com/tomwalker/django_quiz/"&gt;django quiz&lt;/a&gt; to
the mix.&lt;/p&gt;
&lt;p&gt;This was mostly painless, following the django-quiz docs, but when I
fired up the server it failed.  The problem was down to me using
&lt;a class="reference external" href="http://django-allauth.readthedocs.org/"&gt;django-allauth&lt;/a&gt; which effectively removes &lt;em&gt;auth.User&lt;/em&gt;. The fix is to
use &lt;em&gt;settings.AUTH_USER_MODEL&lt;/em&gt; if you want to reference the &lt;em&gt;User&lt;/em&gt;
model in your own models.&lt;/p&gt;
&lt;p&gt;I made the &lt;a class="reference external" href="https://github.com/tomwalker/django_quiz/commit/9416c05cd447e3aa40a2351684f2105dafa95e13"&gt;user model fix&lt;/a&gt; and made a pull request.  Happily, the
project maintainer actioned the request within the hour (many thanks
Tom!) and I was able to update to the new version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install git+https://github.com/tomwalker/django_quiz.git
&lt;/pre&gt;
&lt;p&gt;By February 1st I was starting to get comfortable with angular and the
pieces were coming together.  I have some simple partials, I have
angular calling the django rest API and I have the beginnings of some
views.&lt;/p&gt;
&lt;p&gt;The next task is to display competitions a user can enter and provide
an enter button.   At this point I did a bit more thinking and
reading.  Deciding what logic to put in angular and what to put in
django views and api calls needs a little thought.&lt;/p&gt;
&lt;p&gt;From here the plan is:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;get the competion list and competion entry features working&lt;/li&gt;
&lt;li&gt;get team creation and team membership features implemented&lt;/li&gt;
&lt;li&gt;get the site up and running in the cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have a simple test server on koding.com, but want to run the actual
site on a different instance.&lt;/p&gt;
&lt;!-- title: links --&gt;
&lt;!-- slug: references --&gt;
&lt;!-- date: 2014-11-13 14:08:31 UTC --&gt;
&lt;!-- tags: --&gt;
&lt;!-- link: --&gt;
&lt;!-- description: links to include in all posts --&gt;
&lt;!-- type: text --&gt;&lt;/div&gt;</description><category>80days</category><category>angular</category><category>django</category><category>javascript</category><guid>http://openbermuda.github.io/80days/posts/angular-velocity.html</guid><pubDate>Fri, 06 Feb 2015 14:36:22 GMT</pubDate></item><item><title>Progress report on 80days</title><link>http://openbermuda.github.io/80days/posts/progress-report-on-80days.html</link><dc:creator>Johnny Gill</dc:creator><description>&lt;div&gt;&lt;p&gt;I am now 33 days into the project and anyone reading this blog ought
to be wondering how it is actually going.&lt;/p&gt;
&lt;p&gt;One thing I am enjoying about this project is there is no project
manager.  Well I guess, technically, that is my job.&lt;/p&gt;
&lt;p&gt;I have been writing code long enough to see more than my share of
magic bullets that will make everything go smoothly.  Sometimes these
were formal approaches to coding and project management.  Other times
the bullets are coming from the open source community: ways of working
that people have developed for themselves.&lt;/p&gt;
&lt;p&gt;In general, the open source stuff speaks for itself.  Nobody is
mandating that the projects work the way they do (actually, in most
cases the BDFL is probably mandating the standards).  But the point is
that the standards are being driven by those that know the job best.&lt;/p&gt;
&lt;p&gt;Around the time Extreme Programming became popular I encountered the
following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Time, resources, scope and quality:  pick any three
&lt;/pre&gt;
&lt;p&gt;Fix three of these and then you have to let those doing the work tell
you what the fourth will likely be.  I find this to be a very useful
tool.  Letting others set all four is a recipe for failure.&lt;/p&gt;
&lt;p&gt;In the 80 days project I am fortunate.  Time is set to 80 days, but I
pretty much have control over the other three.&lt;/p&gt;
&lt;p&gt;Actually, that is not quite true.  As far as &lt;em&gt;scope&lt;/em&gt; is concerned I
will need to deliver something by February 1st and actually need
somewhere people can register for the competition by January 1st (give
or take a few days).  But overall, the scope will be whatever gets
done in the time available.&lt;/p&gt;
&lt;p&gt;Resources are to some extent under my control.  Right now there is
only me working on the project.  Actually, that is not really true.
There is a whole army of open source heroes working on this project,
they just don't know they are working on it.&lt;/p&gt;
&lt;p&gt;So far I really have not written much code.  However, I do have a site
that has a pretty landing page, and about page and you can register
either by setting up &lt;em&gt;yet another user id and password&lt;/em&gt; or by using
your google ID and open auth.&lt;/p&gt;
&lt;p&gt;I didn't have to write any code bar a tiny bit of html and a fair bit
of configuration of django.  Mostly it has just been a matter of
finding packages, reading how they work, follow the instructions.&lt;/p&gt;
&lt;p&gt;To some extent, this whole project is turning into an exercise in how
little code I actually have to write.  Code re-use is working well for
now.&lt;/p&gt;
&lt;div class="section" id="hosting"&gt;
&lt;h2&gt;Hosting&lt;/h2&gt;
&lt;p&gt;The site is not available in the big bad world as yet, mostly due to
the fact I have not decided where to host it as yet.&lt;/p&gt;
&lt;p&gt;Since I had a good experience with &lt;a class="reference external" href="http://openbermuda.github.io/80days/posts/https//koding.com"&gt;koding.com&lt;/a&gt; during the recent
hackathon, that is probably what I will end up using.  The good news
is that I know all the stuff I am using will only take about 30
minutes to get up and running on that platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-left-to-do"&gt;
&lt;h2&gt;What is left to do&lt;/h2&gt;
&lt;p&gt;Pretty much all the details of the site, but this is most of the fun
stuff.&lt;/p&gt;
&lt;p&gt;I am planning to create a couple of new django apps.  &lt;em&gt;django teams&lt;/em&gt;
will be a simple app to manage teams.  A team is just a set of
competitors, but will have some other attributes such as team size.&lt;/p&gt;
&lt;p&gt;I might include &lt;em&gt;competitions&lt;/em&gt; in this app, since teams will be busy
entering competitions.&lt;/p&gt;
&lt;p&gt;Another app I am thinking about is &lt;em&gt;django routes&lt;/em&gt;.   This is a key
part of the 80 days project: we need a route that we are going to take
around the world.  A route is really just an ordered set of places.&lt;/p&gt;
&lt;p&gt;However, the same app ought to be useful for the &lt;em&gt;around Bermuda Bus
in 80 days&lt;/em&gt; idea I keep thinking about.  Buses follow routes.&lt;/p&gt;
&lt;p&gt;There is the &lt;a class="reference external" href="https://github.com/tomwalker/django_quiz/"&gt;django quiz&lt;/a&gt; project that I am hoping to use to add
quizzes to the competition.  The idea is that each time a team arrives
in a city along the route there will be a little quiz.  Get the
questions right and you will get some free miles en route to the next
city.&lt;/p&gt;
&lt;p&gt;I am betting there is already something out there to help with &lt;em&gt;django
routes&lt;/em&gt;, perhaps I can make use of something written to work with the
transport data format &lt;a class="reference external" href="https://developers.google.com/transit/gtfs/"&gt;GTFS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All in all, I think the project is on target.&lt;/p&gt;
&lt;!-- title: links --&gt;
&lt;!-- slug: references --&gt;
&lt;!-- date: 2014-11-13 14:08:31 UTC --&gt;
&lt;!-- tags: --&gt;
&lt;!-- link: --&gt;
&lt;!-- description: links to include in all posts --&gt;
&lt;!-- type: text --&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>80days</category><guid>http://openbermuda.github.io/80days/posts/progress-report-on-80days.html</guid><pubDate>Tue, 16 Dec 2014 14:08:31 GMT</pubDate></item></channel></rss>